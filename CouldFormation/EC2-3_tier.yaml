Description: EC2 machine in 3 tier architecture aws_key_irl

Parameters:
  networkStackname:
  Description: Network stack name
  Type: String

keyPairName:
  Type: String
  Description: 

instanceType:
  Type: String
  Description: Instance Type
  Default: t2.micro
  AllowedValues:
  - t2.micro
  - t2.small
  - t2.medium
  - t2.large
  - t2.xlarge
  - m3.medium

SSHLocation:
    Description: " The IP address range that can be used to SSH to the EC2 instances"
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.                                                                                                     

defAMIID:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"    

Mappings:
  AWSRegionToAMI:
    eu-west-1:
      AMIID: ami-035966e8adab4aaad
    us-east-2:
      AMIID: ami-0e35876ae3de666cd
    us-west-2:
      AMIID: ami-0fb71e703258ab7eb
    us-west-1:
      AMIID: ami-03d7632ea0ab75eaa

BucketName:
  Type: String
  Description: Enter the bucket name

Resources:
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
	 VpcId:
      Fn::ImportValue:
        Fn::Sub: "${networkStackname}-VPCID"
	  SubnetId:
	    Fn::ImportValue:
		  Fn::Sub: "${networkStackname}-PubSub1"
    ImageId: !FindInMap
      - AWSRegionToAMI
      - !Ref AWS::Region
      - AMIID
      instanceType:
        Ref: instanceType
      IamInstanceProfile:
        Ref: BastionHostProfile    
      KeyName:
        Ref: keyPairName
      AssociatePublicIpAddress: true
      SecurityGroups:
        Ref: InstanceSecurityGroup
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${networkStackname}-VPCID"
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SSHLocation
  BastionHostProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: !Ref EC2Role
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
      - PolicyName: ecs-instance-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:GetBucketLogging
            - s3:ListBucketVersions
            - s3:ListBucket
            - s3:GetBucketVersioning
            - s3:GetBucketAcl
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:GetObjectVersionAcl
            - s3:GetObjectTagging
            - s3:GetObjectVersion
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
      - PolicyName: ecs-instance-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:GetBucketLogging
            - s3:ListBucketVersions
            - s3:ListBucket
            - s3:GetBucketVersioning
            - s3:GetBucketAcl
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:GetObjectVersionAcl
            - s3:GetObjectTagging
            - s3:GetObjectVersion
            Resource: 
                 - Fn::Join:
                         - ""
                         - - 'arn:aws:s3:::'
                           - !Ref BucketName
                           - "/*"